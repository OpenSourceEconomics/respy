notifications:
  - provider: Slack
    incoming_webhook: https://hooks.slack.com/services/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
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: true
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

# Do not start two builds, one for the branch and one for the PR.
skip_branch_with_pr: true

image: Visual Studio 2015

environment:
  MINICONDA: "C:\\Miniconda36-x64"
  matrix:
      # - FORTRAN: false
      #   MPI: false
      #   OMP: false
      # - FORTRAN: true
      #   MPI: true
      #   OMP: true
      # - FORTRAN: true
      #   MPI: false
      #   OMP: true
      - FORTRAN: true
        MPI: true
        OMP: false

install:
  # If there is a newer build queued for the same PR, cancel this one. The AppVeyor
  # 'roll-out builds' option is supposed to serve the same purpose but it is problematic
  # because it tends to cancel builds pushed directly to master instead of just PR
  # builds (or the converse). Credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
      https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
      Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

  # Add miniconda to PATH
  - ps: $env:PATH += ";$env:MINICONDA;$env:MINICONDA\Scripts;$env:MINICONDA\bin"

  # Add Fortran to PATH
  - ps: if ($env:FORTRAN -eq $true) {$env:PATH += ";C:\msys64\mingw64\bin"}

  # Install MS-MPI
  - ps: >-
      if ($env:MPI -eq $true) {
        Invoke-WebRequest https://github.com/Microsoft/Microsoft-MPI/releases/download/v10.0/msmpisetup.exe -OutFile msmpisetup.exe
        Start-Process msmpisetup.exe -unattend
        $env:PATH += ";C:\Program Files\Microsoft MPI\Bin"
      }

  # Set conda to always yes and print info
  - conda config --set always_yes yes --set changeps1 no
  - conda info -a
  - conda install numpy scipy=0.19 pandas=0.21 statsmodels=0.8 numba
  - pip install pytest pytest-cov codecov
  - pip install -e . -vv
  - pytest --cov=respy -vvv -s

build: false

on_success:
  - sh: |
      if  [ $FORTRAN ] || \
          [ $MPI ] || \
          [ $OMP ] ||
      then
          codecov
          echo 'send coverage statistic'
      fi
